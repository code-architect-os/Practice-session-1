let headElem = document.getElementById("head");
console.log(headElem);

let infoElem = document.getElementsByClassName("info");
console.log(infoElem);

const form = document.forms["loginForm"]; // or document.forms[0]
const usernameInput = form["username"];
const passwordInput = form["password"];

console.log(usernameInput.value); // logs the value of the username input

let a = 12;
let b = 112;
console.log(a + b);
console.log(a * b);
console.log(a / b);
console.log(a % b);
console.log(a ** b);
console.log(a++);
console.log(b--);
console.log(++a);
console.log(--b);

  function functionName( Para1, Para2, Para3, Para4) 
  { console.log("fnfsddfd" + para1 + Para2 + Para3 + Para4) }    
  function keyword ( declare function ) functionName 
  (this is fn name by which we invoke of fn once it's declare, Para 1- 3
    ( this will parameter and the input while invocation will different 
        for every user, and in para we assign those name or value 
        which we want multiple time or for every user ) 
        and inside console.log ( whatever we write will 
            be output can be additional string like greeting, 
            sayhello, welcome and then para 1-4 ) -  
            this is function declaration , and functionName
            ( "sayHello", para1, para2, para3, para4);   - this is function invocation function calling 



         "return is keyword - Send a value back from a function to wherever the function was called. It ends the function and outputs a value. If return you are using then must store it in variable in which you want return value -- for ex - function add(a, b) {
  return a + b;
}

let result = add(2, 3); 
console.log(result); // Output: 5 // return a + b; sends the result (5) back to where add(2, 3) was called.
That result is stored in the result variable.
Returns end the function , it's used when you want a value, when want to store the result, when want to use the result in code "


function greet(name = "Guest") {

console.log("Hello, " + name);

}

greet("Alice"); // Output: Hello, Alice

greet();        // Output: Hello, Guest // If you pass a name like "Alice", it uses that. //  If you don’t pass anything, it uses "Guest" as the default. //  we use it - To make your functions more flexible // To avoid errors if some arguments are missing // To write cleaner code (no need for if (!name) name = "Guest") //
